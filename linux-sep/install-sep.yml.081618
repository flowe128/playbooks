---
- name: Install Symantec agent on Linux Systems
  hosts: all
  become: yes
  tasks:
# Check if the software is installed.
     - name: Check if Symantec is installed on {{ ansible_hostname }}
       stat: path=/opt/Symantec/symantec_antivirus/smcd
       register: result

# If the software is installed exit the program without a failure.
     - name: Exit if Symantec is installed on {{ ansible_hostname }}
       debug: 
         msg: "Symatec is already installed on {{ ansible_hostname }}"
     - meta: end_play 
       when: result.stat.exists == True

# Download and extract software source 
     - name: Extract Symantec software on {{ ansible_hostname }}
       unarchive:
         src: http://egvc1l9app32.sxc.com/pub/sep.tar.gz
         dest: /tmp/
         remote_src: yes

# Make sure glibc is installed
     - name: Make sure glibc.i686 is installed on {{ ansible_hostname }}
       yum:
         name: glibc.i686
         state: present

# Install the software.
     - name: Execute Symantec Installer on {{ ansible_hostname }}
       shell: /tmp/sep/install.sh -i

# Enable the service on RHEL 6
     - name: Enable smcd service on {{ ansible_hostname }} (RHEL 6)
       service:
         name: smcd
         enabled: yes
       when: ansible_distribution_major_version == '6' 

# Start the service on RHEL 6
     - name: Start start service on {{ ansible_hostname }} (RHEL 6)
       service:
         name: smcd
         state: started
       register: smcd_status
       when: ansible_distribution_major_version == '6' 
    
# Enable the service on RHEL 7
     - name: Enable smcd service on {{ ansible_hostname }} (RHEL 7)
       systemd:
         name: smcd
         enabled: yes
         masked: no
       when: ansible_distribution_major_version == '7' 

# Start the service on RHEL 7
     - name: Start smcd service on {{ ansible_hostname }} (RHEL 7)
       systemd:
         name: smcd
         state: started
       register: smcd_status
       when: ansible_distribution_major_version == '7' 

# Sanity check to ensure the service is running
     - name: Check if smcd is running on
       debug: 
         msg: "The service smcd is running on {{ ansible_hostname }}"
       when: smcd_status.stdout.find("running") != -1
